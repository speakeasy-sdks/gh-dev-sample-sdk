/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Agent } from "./agent";
import { Integration } from "./integration";
import { Expose, Type } from "class-transformer";

export class EnvironmentEmails extends SpeakeasyBase {}

export class EnvironmentHeaders extends SpeakeasyBase {}

export class EnvironmentInitialVariables extends SpeakeasyBase {}

export class Environment extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "auth" })
    auth?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "client_certificate" })
    clientCertificate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "emails" })
    @Type(() => EnvironmentEmails)
    emails?: EnvironmentEmails;

    @SpeakeasyMetadata()
    @Expose({ name: "exported_at" })
    exportedAt?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    @Type(() => EnvironmentHeaders)
    headers?: EnvironmentHeaders;

    /**
     * The unique identifier for this environment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_script_hash" })
    initialScriptHash?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_variables" })
    @Type(() => EnvironmentInitialVariables)
    initialVariables?: EnvironmentInitialVariables;

    /**
     * The list of integrations for this environment.
     */
    @SpeakeasyMetadata({ elemType: Integration })
    @Expose({ name: "integrations" })
    @Type(() => Integration)
    integrations?: Integration[];

    /**
     * Name of this environment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "parent_environment_id" })
    parentEnvironmentId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "preserve_cookies" })
    preserveCookies?: boolean;

    /**
     * An array of the region codes that this environment is using.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "regions" })
    regions?: string[];

    @SpeakeasyMetadata({ elemType: Agent })
    @Expose({ name: "remote_agents" })
    @Type(() => Agent)
    remoteAgents?: Agent[];

    @SpeakeasyMetadata()
    @Expose({ name: "retry_on_failure" })
    retryOnFailure?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "script" })
    script?: string;

    /**
     * The list of ids for scripts, part of the script libraries, being used for this environment.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "script_library" })
    scriptLibrary?: string[];

    /**
     * Stop executing the test after the first failed step.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "stop_on_failure" })
    stopOnFailure?: boolean;

    /**
     * The unique identifier for this test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "test_id" })
    testId?: string;

    /**
     * Validate all SSL certificates on any HTTPS connections.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "verify_ssl" })
    verifySsl?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "webhooks" })
    webhooks?: string;
}
