/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class Request extends SpeakeasyBase {
    /**
     * HTTP request body (most commonly used for POST and PUT requests). If the
     *
     * @remarks
     * request body contains binary data that cannot be included directly in the
     * JSON, encode the content with Base64 and include the body_encoding attribute accordingly.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "body" })
    body?: string;

    /**
     * If the request body was encoded with Base64, this field should be present and set to
     *
     * @remarks
     * "base64". If not specified, defaults to "plaintext"
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "body_encoding" })
    bodyEncoding?: string;

    /**
     * JSON object of set of form fields included in a POST request.
     *
     * @remarks
     * Values can either be represented as a string or as an array of strings.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "form" })
    form?: string;

    /**
     * JSON object of header keys and values -- with values as a string or an array of strings.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    headers?: string;

    /**
     * HTTP method name (GET, POST, PUT, HEAD, OPTIONS, PATCH, DELETE, etc.)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method?: string;

    /**
     * Unix timestamp indicating when the request was made.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timestamp" })
    timestamp?: number;

    /**
     * Full URL of the request, including URL querystring parameters.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url?: string;
}

export class Response extends SpeakeasyBase {
    /**
     * HTTP response body. If the response body contains binary data that cannot be
     *
     * @remarks
     * included directly in the JSON, you should encode the content with Base64.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "body" })
    body?: string;

    /**
     * If the request body was encoded with Base64, this field should be present and set to
     *
     * @remarks
     * "base64". If not specified, defaults to "plaintext"
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "body_encoding" })
    bodyEncoding?: string;

    /**
     * JSON object of header keys and values -- with values as a string or an array of strings.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    headers?: string;

    /**
     * Textual description of HTTP status code. This will be set automatically if not
     *
     * @remarks
     * provided in the API call. For example, if the status code is 404, this will be
     * set to "Not Found" unless you explicitly specify a different reason.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    /**
     * Length of time it took to receive the response, in seconds.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "response_time" })
    responseTime?: number;

    /**
     * HTTP status code returned in the response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: number;

    /**
     * Unix timestamp indicating when the request was made.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timestamp" })
    timestamp?: number;
}

export class NewMessage extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "request" })
    @Type(() => Request)
    request?: Request;

    @SpeakeasyMetadata()
    @Expose({ name: "response" })
    @Type(() => Response)
    response?: Response;
}
